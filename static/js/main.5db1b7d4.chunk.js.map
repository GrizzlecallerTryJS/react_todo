{"version":3,"sources":["components/tasksComponent.jsx","components/tasksInput.jsx","App.js","index.js"],"names":["Task","task","props","ActionBtn","className","status","onClick","deleteTask","doneTask","qqq","title","TasksInput","taskTitle","input","state","addTask","setState","newTaskElement","React","createRef","inputChange","text","current","value","handleEnter","event","key","this","onKeyPress","ref","onChange","Component","App","id","index","tasks","map","t","indexOf","push","length","activeTasks","filter","doneTasks","ReactDOM","render","document","getElementById"],"mappings":"sNAqBeA,EAnBF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,wBAC7BC,EAAY,WAChB,OACE,qBAAKC,UAAU,aAAf,SACIH,EAAKI,OAA8C,mBAAGC,QAASJ,EAAMK,WAAlB,oBAArC,mBAAGD,QAASJ,EAAMM,SAAlB,6BAKhBC,EAAM,SAAWR,EAAKI,OAAS,YAAc,IAEnD,OACE,sBAAKD,UAAWK,EAAhB,UACE,4BAAIR,EAAKS,QACT,cAACP,EAAD,Q,QC6BSQ,E,kDA1Cb,WAAaT,GAAQ,IAAD,8BAClB,cAAMA,IAORU,UAAY,WACV,IACQC,EADK,eAAQ,EAAKC,OAClBD,MACJA,IACF,EAAKX,MAAMa,QAAQF,GACnB,EAAKG,SAAS,CAAEH,MAAO,OAbP,EAiBpBI,eAAiBC,IAAMC,YAjBH,EAmBpBC,YAAc,WACZ,IAAIC,EAAO,EAAKJ,eAAeK,QAAQC,MACvC,EAAKP,SAAS,CAAEH,MAAOQ,KArBL,EAwBpBG,YAAc,SAACC,GACK,UAAdA,EAAMC,KACR,EAAKd,aAvBP,EAAKE,MAAQ,CACXD,MAAQ,IAJQ,E,0CA8BpB,WAAW,IACDA,EAAUc,KAAKb,MAAfD,MAER,OACE,sBAAKT,UAAU,aAAf,UACE,uBAAOwB,WAAYD,KAAKH,YAAaK,IAAKF,KAAKV,eAAgBa,SAAUH,KAAKP,YAAaG,MAAOV,IAClG,wBAAQP,QAASqB,KAAKf,UAAtB,wB,GArCiBM,IAAMa,WC6EhBC,E,kDA1Eb,aAAgB,IAAD,8BACb,gBAuBFxB,SAAW,SAACyB,GACV,IAAMC,EAAQ,EAAKpB,MAAMqB,MAAMC,KAAI,SAACC,GAAD,OAAOA,EAAEJ,MAAIK,QAAQL,GACxD,EAAKjB,UAAS,SAACF,GAAW,IAClBqB,EAAUrB,EAAVqB,MAEN,OADAA,EAAMD,GAAO7B,QAAS,EACf8B,MA7BI,EAiCf5B,WAAa,SAAC0B,GACZ,IAAMC,EAAQ,EAAKpB,MAAMqB,MAAMC,KAAI,SAACC,GAAD,OAAOA,EAAEJ,MAAIK,QAAQL,GACxD,EAAKjB,UAAS,SAACF,GAAW,IAClBqB,EAAUrB,EAAVqB,MAEN,cADOA,EAAMD,GACNC,MAtCI,EA0CfpB,QAAU,SAACH,GACT,EAAKI,UAAS,WAAO,IACbmB,EAAU,EAAKrB,MAAfqB,MAMN,OALAA,EAAMI,KAAK,CACTN,GAASE,EAAMK,OAASL,EAAMK,OAAS,EACvC9B,MAASE,EACTP,QAAS,IAEJ8B,MA/CT,EAAKrB,MAAQ,CACXqB,MAAQ,CACN,CACEF,GAAS,EACTvB,MAAS,eACTL,QAAS,GAEX,CACE4B,GAAS,EACTvB,MAAS,eACTL,QAAS,GAEX,CACE4B,GAAS,EACTvB,MAAS,eACTL,QAAS,KAlBF,E,0CAsDf,WAAW,IAAD,OACA8B,EAAUR,KAAKb,MAAfqB,MAEJM,EAAcN,EAAMO,QAAO,SAACzC,GAAD,OAAWA,EAAKI,UAC3CsC,EAAYR,EAAMO,QAAO,SAACzC,GAAD,OAAUA,EAAKI,UAC5C,OACE,sBAAKD,UAAU,MAAf,UACE,qBAAIA,UAAU,MAAd,2BAAmCqC,EAAYD,UAC9C,sBACIC,GADJ,YAEIE,IACHP,KAAI,SAACC,GAAD,OACJ,cAAC,EAAD,CAAM7B,SAAU,kBAAM,EAAKA,SAAS6B,EAAEJ,KAAK1B,WAAY,kBAAM,EAAKA,WAAW8B,EAAEJ,KAAKhC,KAAMoC,GAAQA,EAAEJ,OAEtG,cAAC,EAAD,CAAYlB,QAASY,KAAKZ,iB,GArEhBG,IAAMa,WCCxBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5db1b7d4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Task = ({ task, ...props }) => {\n  const ActionBtn = () => {\n    return (\n      <div className='action-btn'>\n        {!task.status ? <p onClick={props.doneTask}>✔️</p> : <p onClick={props.deleteTask}>❌</p>}\n      </div>\n    );\n  };\n\n  const qqq = 'task ' + (task.status ? 'task-done' : '');\n\n  return (\n    <div className={qqq}>\n      <p>{task.title}</p>\n      <ActionBtn />\n    </div>\n  );\n};\n\nexport default Task;\n","import React from 'react';\n\nclass TasksInput extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      input : '',\n    };\n  }\n\n  taskTitle = () => {\n    let stateCopy = { ...this.state };\n    const { input } = stateCopy;\n    if (input) {\n      this.props.addTask(input);\n      this.setState({ input: '' });\n    }\n  };\n\n  newTaskElement = React.createRef();\n\n  inputChange = () => {\n    let text = this.newTaskElement.current.value;\n    this.setState({ input: text });\n  };\n\n  handleEnter = (event) => {\n    if (event.key === 'Enter') {\n      this.taskTitle();\n    }\n  };\n\n  render () {\n    const { input } = this.state;\n\n    return (\n      <div className='task-input'>\n        <input onKeyPress={this.handleEnter} ref={this.newTaskElement} onChange={this.inputChange} value={input} />\n        <button onClick={this.taskTitle}>Add</button>\n      </div>\n    );\n  }\n}\n\nexport default TasksInput;\n","import React from 'react';\nimport Task from './components/tasksComponent';\nimport TasksInput from './components/tasksInput';\n\nclass App extends React.Component {\n  constructor () {\n    super();\n\n    this.state = {\n      tasks : [\n        {\n          id     : 0,\n          title  : 'test tasks 0',\n          status : false,\n        },\n        {\n          id     : 1,\n          title  : 'test tasks 1',\n          status : true,\n        },\n        {\n          id     : 2,\n          title  : 'test tasks 2',\n          status : false,\n        },\n      ],\n    };\n  }\n\n  doneTask = (id) => {\n    const index = this.state.tasks.map((t) => t.id).indexOf(id);\n    this.setState((state) => {\n      let { tasks } = state;\n      tasks[index].status = true;\n      return tasks;\n    });\n  };\n\n  deleteTask = (id) => {\n    const index = this.state.tasks.map((t) => t.id).indexOf(id);\n    this.setState((state) => {\n      let { tasks } = state;\n      delete tasks[index];\n      return tasks;\n    });\n  };\n\n  addTask = (taskTitle) => {\n    this.setState(() => {\n      let { tasks } = this.state;\n      tasks.push({\n        id     : tasks.length ? tasks.length : 0,\n        title  : taskTitle,\n        status : false,\n      });\n      return tasks;\n    });\n  };\n\n  render () {\n    const { tasks } = this.state;\n\n    let activeTasks = tasks.filter((task) => !task.status);\n    let doneTasks = tasks.filter((task) => task.status);\n    return (\n      <div className='App'>\n        <h1 className='top'>Active Tasks: {activeTasks.length}</h1>\n        {[\n          ...activeTasks,\n          ...doneTasks,\n        ].map((t) => (\n          <Task doneTask={() => this.doneTask(t.id)} deleteTask={() => this.deleteTask(t.id)} task={t} key={t.id} />\n        ))}\n        <TasksInput addTask={this.addTask} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}